% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{plot_hisafe_annualcrop}
\alias{plot_hisafe_annualcrop}
\title{Tile plot of Hi-sAFe annualplot output variable}
\usage{
plot_hisafe_annualcrop(hop, variable = "yieldMax", simu.names = "all",
  years = seq(0, 40, 5), trees = TRUE, canopies = TRUE, plot = TRUE)
}
\arguments{
\item{hop}{An object of class hop.}

\item{variable}{A character string of the name of the variable to color the tiles.}

\item{simu.names}{A character string containing the SimulationNames to include. Use "all" to include all available values.}

\item{years}{A numeric vector containing the years (after planting) to include. Use "all" to include all available values.}

\item{trees}{Logical indicating if a point should be plotted at the location of each tree.}

\item{canopies}{Logical indicating if an elipsoid should be plotted representing the size of each tree canopy.}

\item{plot}{If \code{TRUE}, the default, a ggplot object is returned. If \code{FALSE}, the data that would create the plot is returned.}
}
\value{
Returns a ggplot object.
}
\description{
Plots a tile plot of a single Hi-sAFe annualplot output variable.
}
\details{
This function is very picky! You can only facet by two of the three manipulable variables: SimulationName, Year, Month.
You must ensure that the one varibale not used for faceting is fixed at a single value.
}
\examples{
\dontrun{
# After reading in Hi-sAFe simulation data via:
mydata <- read_hisafe(path = "./")

# You can create a tile plot of monthDirectParIncident:
tile.plot <- plot_hisafe_annualcrop(mydata, "yieldMax")

# Once you have the plot object, you can display it and save it:
tile.plot
ggplot2::ggsave("yield.png", tile.plot)
}
}
\seealso{
Other hisafe plot functions: \code{\link{plot_hisafe_cells}},
  \code{\link{plot_hisafe_monthcells}},
  \code{\link{plot_hisafe_scene}},
  \code{\link{plot_hisafe_ts}},
  \code{\link{plot_hisafe_voxels}}
}
